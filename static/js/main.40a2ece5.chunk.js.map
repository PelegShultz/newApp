{"version":3,"sources":["components/users.jsx","components/locationPin.jsx","components/map.jsx","components/userDetails.jsx","App.js","reportWebVitals.js","index.js"],"names":["columns","field","headerName","width","headerAlign","headerClassName","renderCell","x","src","row","image","thumbnail","height","alt","flex","minWidth","sortComparator","v1","v2","param1","param2","first","last","localeCompare","partialName","fullName","charAt","to","href","email","useStyles","makeStyles","root","background","color","Users","props","classes","style","className","Helmet","bodyAttributes","display","flexGrow","autoHeight","rows","pageSize","rowsPerPageOptions","getRowClassName","loading","LocationPin","text","icon","locationIcon","Map","location","zoomLevel","console","log","bootstrapURLKeys","key","defaultCenter","coordinates","center","defaultZoom","yesIWantToUseGoogleMapApiInternals","lat","lng","address","User","styles","margin","padding","borderRaduis","boxShadow","position","left","this","street","number","name","city","state","country","parseFloat","latitude","longitude","id","large","gender","age","Component","App","fetch","then","response","json","data","setState","results","map","res","login","uuid","picture","dob","Fragment","exact","path","render","match","params","find","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40a2ece5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { DataGrid, renderActionsCell } from \"@mui/x-data-grid\";\r\nimport \"../App.css\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst columns = [\r\n  {\r\n    field: \"image\",\r\n    headerName: \"Image\",\r\n    width: 150,\r\n    headerAlign: \"center\",\r\n    headerClassName: \"header\",\r\n    renderCell: (x) => {\r\n      return (\r\n        <img src={x.row.image.thumbnail} height=\"50\" width=\"50\" alt=\"user\" />\r\n      );\r\n    },\r\n  },\r\n  {\r\n    field: \"fullName\",\r\n    headerName: \"Full Name\",\r\n    flex: 1,\r\n    minWidth: 150,\r\n    headerAlign: \"center\",\r\n    headerClassName: \"header\",\r\n    sortComparator: (v1, v2, param1, param2) =>\r\n      (v1.first + v1.last).localeCompare(v2.first + v2.last),\r\n    renderCell: (x) => {\r\n      const partialName =\r\n        x.row.fullName.first.charAt(0) + \". \" + x.row.fullName.last;\r\n      return (\r\n        <Link to={\"/userDeatils/\" + x.row.fullName.first + x.row.fullName.last}>\r\n          {partialName}\r\n        </Link>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    field: \"email\",\r\n    headerName: \"Email\",\r\n    flex: 1,\r\n    minWidth: 150,\r\n    headerAlign: \"center\",\r\n    headerClassName: \"header\",\r\n    renderCell: (x) => <a href={\"mailto:\" + x.row.email}>{x.row.email}</a>,\r\n  },\r\n  {\r\n    field: \"gender\",\r\n    headerName: \"Gender\",\r\n    width: 150,\r\n    headerAlign: \"center\",\r\n    headerClassName: \"header\",\r\n  },\r\n  {\r\n    field: \"age\",\r\n    headerName: \"Age\",\r\n    width: 150,\r\n    headerAlign: \"center\",\r\n    headerClassName: \"header\",\r\n  },\r\n];\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"& .header\": {\r\n      background: \"linear-gradient(#ffea31, #ffbe31)\",\r\n      color: \"black\",\r\n    },\r\n    \"& .rows\": {\r\n      background: \"linear-gradient(white, gray)\",\r\n      color: \"black\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Users = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ width: \"100%\" }} className={classes.root}>\r\n      <Helmet bodyAttributes={{ style: \"background-color :  #002142\" }}>\r\n        <title>All Users</title>\r\n      </Helmet>\r\n      <h1>All Users</h1>\r\n      <div style={{ display: \"flex\", height: \"100%\" }}>\r\n        <div style={{ flexGrow: 1 }}>\r\n          <DataGrid\r\n            autoHeight\r\n            rows={props.rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            rowsPerPageOptions={[10]}\r\n            getRowClassName={() => \"rows\"}\r\n            loading={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Users;\r\n","import { Icon } from '@iconify/react'\r\nimport locationIcon from '@iconify/icons-mdi/map-marker'\r\nimport '../map.css'\r\n\r\nconst LocationPin = ({ text }) => (\r\n    <div className=\"pin\">\r\n      <Icon icon={locationIcon} className=\"pin-icon\" />\r\n      <p className=\"pin-text\">{text}</p>\r\n    </div>\r\n  )\r\n\r\n export default LocationPin;","import React from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport '../map.css'\r\nimport LocationPin from \"./locationPin.jsx\"\r\n\r\nconst Map = ({location, zoomLevel}) => {\r\n    console.log(location)\r\n    return(\r\n    <div className=\"map\">\r\n\r\n    <div className=\"google-map\">\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: 'AIzaSyDmS5HUHriuqEssaDNUXxwDoQE5kiXeNaE' }}\r\n        defaultCenter={location.coordinates}\r\n        center={location.coordinates}\r\n        defaultZoom={zoomLevel}\r\n        yesIWantToUseGoogleMapApiInternals\r\n      >\r\n        <LocationPin\r\n        lat={location.coordinates.lat}\r\n        lng={location.coordinates.lng}\r\n        text={location.address}\r\n        />\r\n      </GoogleMapReact>\r\n    </div>\r\n  </div>\r\n    )\r\n    }\r\n\r\nexport default Map;","import React, { Component } from \"react\";\r\nimport { DataGrid, renderActionsCell } from \"@mui/x-data-grid\";\r\nimport \"../App.css\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Map from \"./map.jsx\";\r\n\r\nclass User extends Component {\r\n  render() {\r\n    const location = {\r\n      address:\r\n        this.props.address.street.number +\r\n        \" \" +\r\n        this.props.address.street.name +\r\n        \" \" +\r\n        this.props.address.city +\r\n        \" \" +\r\n        this.props.address.state +\r\n        \" \" +\r\n        this.props.address.country,\r\n\r\n      coordinates: {\r\n        lat: parseFloat(this.props.address.coordinates.latitude),\r\n        lng: parseFloat(this.props.address.coordinates.longitude),\r\n      },\r\n    };\r\n    return (\r\n      <nav>\r\n        <Helmet bodyAttributes={{ style: \"background-color :  #002142\" }}>\r\n          <title>User Details</title>\r\n        </Helmet>\r\n        <div style={this.styles}>\r\n          <img\r\n            id=\"userImg\"\r\n            src={this.props.image.large}\r\n            height=\"100\"\r\n            width=\"100\"\r\n            alt=\"user\"\r\n          />\r\n          <div className=\"text\">\r\n            Name: {this.props.fullName.first + \" \" + this.props.fullName.last}\r\n          </div>\r\n          <div className=\"text\">Email: {this.props.email}</div>\r\n          <div className=\"text\">Gender: {this.props.gender}</div>\r\n          <div className=\"text\">Age: {this.props.age}</div>\r\n          <div className=\"text\">\r\n            Address: {location.address}\r\n            <Map location={location} zoomLevel={13} />\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n  styles = {\r\n    height: \"80%\",\r\n    width: \"30%\",\r\n    background: \"radial-gradient(circle,white, grey)\",\r\n    margin:\r\n      \"4% auto\" /* the auto is so that the margin keeps getting bigger with the windows*/,\r\n    padding: 20,\r\n    borderRaduis: 10,\r\n    boxShadow: \"0px 0px 20px #3198ff\",\r\n    position: \"fixed\",\r\n    left: \"33%\",\r\n  };\r\n}\r\nexport default User;\r\n","import \"./App.css\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport Users from \"./components/users.jsx\";\r\nimport User from \"./components/userDetails.jsx\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    rows: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://randomuser.me/api/?results=200&seed=abc\")\r\n      .then((response) => response.json())\r\n      .then((data) =>\r\n        this.setState({\r\n          rows: data.results.map((res) => {\r\n            return {\r\n              id: res.login.uuid,\r\n              email: res.email,\r\n              gender: res.gender,\r\n              fullName: {\r\n                first: res.name.first,\r\n                last: res.name.last,\r\n              },\r\n              image: {\r\n                thumbnail: res.picture.thumbnail,\r\n                large: res.picture.large,\r\n              },\r\n              address: res.location,\r\n              age: res.dob.age,\r\n            };\r\n          }),\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Router>\r\n          <main className=\"container\">\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/newApp\"\r\n                render={(props) => <Users rows={this.state.rows} />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/userDeatils/:fullName\"\r\n                render={(props) => {\r\n                  const name = props.match.params.fullName;\r\n                  const data = this.state.rows.find(\r\n                    (item) => (item.fullName.first + item.fullName.last) === name\r\n                  );\r\n                  if(data)\r\n                  {\r\n                  return <User {...props} {...data} />;\r\n                  }\r\n                }}\r\n              />\r\n            </Switch>\r\n          </main>\r\n        </Router>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}